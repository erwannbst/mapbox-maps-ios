{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/mapboxmaps\/coordinatebounds\/containslatitude(forlatitude:)"]},{"paths":["\/documentation\/mapboxmaps\/coordinatebounds\/containslatitude(forlatitude:)"],"traits":[{"interfaceLanguage":"occ"}]}],"metadata":{"role":"symbol","navigatorTitle":[{"text":"containsLatitudeForLatitude:","kind":"identifier"}],"symbolKind":"method","externalID":"c:objc(cs)MBMCoordinateBounds(im)containsLatitudeForLatitude:","title":"containsLatitude(forLatitude:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"containsLatitude"},{"text":"(","kind":"text"},{"text":"forLatitude","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Double","kind":"typeIdentifier","preciseIdentifier":"s:Sd"},{"text":") -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"roleHeading":"Instance Method","modules":[{"name":"MapboxMaps"}]},"abstract":[{"text":"Returns whether the bounds contains ","type":"text"},{"type":"codeVoice","code":"latitude"},{"type":"text","text":" or not."}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"containsLatitude"},{"kind":"text","text":"("},{"text":"forLatitude","kind":"externalParam"},{"kind":"text","text":" "},{"kind":"internalParam","text":"latitude"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Double","preciseIdentifier":"s:Sd"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"platforms":["iOS"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"The latitude to be checked against the bounds.","type":"text"}]}],"name":"latitude"}]},{"content":[{"type":"heading","anchor":"return-value","level":2,"text":"Return Value"},{"type":"paragraph","inlineContent":[{"code":"true","type":"codeVoice"},{"type":"text","text":" if the bounds contains "},{"type":"codeVoice","code":"latitude"},{"type":"text","text":", "},{"code":"false","type":"codeVoice"},{"type":"text","text":" otherwise."}]}],"kind":"content"}],"hierarchy":{"paths":[["doc:\/\/com.mapbox.MapboxMaps\/documentation\/Overview","doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps","doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/MapboxMap-APIs","doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/CoordinateBounds"]]},"kind":"symbol","schemaVersion":{"major":0,"minor":3,"patch":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/CoordinateBounds\/containsLatitude(forLatitude:)"},"sections":[],"references":{"doc://com.mapbox.MapboxMaps/documentation/MapboxMaps/MapboxMap-APIs":{"identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/MapboxMap-APIs","role":"collectionGroup","type":"topic","title":"MapboxMap","kind":"article","url":"\/documentation\/mapboxmaps\/mapboxmap-apis","abstract":[]},"doc://com.mapbox.MapboxMaps/documentation/MapboxMaps/CoordinateBounds":{"fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"CoordinateBounds","kind":"identifier"}],"url":"\/documentation\/mapboxmaps\/coordinatebounds","navigatorTitle":[{"kind":"identifier","text":"CoordinateBounds"}],"type":"topic","kind":"symbol","identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/CoordinateBounds","title":"CoordinateBounds","abstract":[{"type":"text","text":"A rectangular area as measured on a two-dimensional map projection."}],"role":"symbol"},"doc://com.mapbox.MapboxMaps/documentation/MapboxMaps":{"identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps","kind":"symbol","type":"topic","url":"\/documentation\/mapboxmaps","abstract":[{"text":"Interactive, thoroughly customizable maps for iOS powered by vector tiles and Metal.","type":"text"}],"role":"collection","title":"MapboxMaps"},"doc://com.mapbox.MapboxMaps/documentation/Overview":{"title":"MapboxMaps Documentation","abstract":[],"url":"\/documentation\/overview","role":"collection","identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/Overview","type":"topic","kind":"article"},"doc://com.mapbox.MapboxMaps/documentation/MapboxMaps/CoordinateBounds/containsLatitude(forLatitude:)":{"kind":"symbol","navigatorTitle":[{"text":"containsLatitudeForLatitude:","kind":"identifier"}],"type":"topic","title":"containsLatitude(forLatitude:)","role":"symbol","identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/CoordinateBounds\/containsLatitude(forLatitude:)","abstract":[{"type":"text","text":"Returns whether the bounds contains "},{"code":"latitude","type":"codeVoice"},{"text":" or not.","type":"text"}],"url":"\/documentation\/mapboxmaps\/coordinatebounds\/containslatitude(forlatitude:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"containsLatitude","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"forLatitude"},{"kind":"text","text":": "},{"text":"Double","kind":"typeIdentifier","preciseIdentifier":"s:Sd"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}]}},"variantOverrides":[{"traits":[{"interfaceLanguage":"occ"}],"patch":[{"op":"replace","path":"\/identifier\/interfaceLanguage","value":"occ"},{"value":"Instance Method","path":"\/metadata\/roleHeading","op":"replace"},{"op":"replace","path":"\/metadata\/title","value":"containsLatitudeForLatitude:"},{"op":"replace","path":"\/metadata\/symbolKind","value":"method"},{"path":"\/metadata\/fragments","value":[{"kind":"text","text":"- "},{"kind":"identifier","text":"containsLatitudeForLatitude:"}],"op":"replace"},{"path":"\/topicSections","value":null,"op":"add"},{"value":null,"op":"add","path":"\/relationshipsSections"},{"op":"add","value":null,"path":"\/seeAlsoSections"},{"path":"\/primaryContentSections\/0","op":"replace","value":{"declarations":[{"platforms":["iOS"],"languages":["occ"],"tokens":[{"text":"- (","kind":"text"},{"kind":"typeIdentifier","text":"BOOL","preciseIdentifier":"c:@T@BOOL"},{"text":") ","kind":"text"},{"text":"containsLatitudeForLatitude:","kind":"identifier"},{"text":"(","kind":"text"},{"text":"double","preciseIdentifier":"c:d","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"latitude","kind":"internalParam"},{"kind":"text","text":";"}]}],"kind":"declarations"}},{"path":"\/primaryContentSections\/1","op":"replace","value":{"parameters":[{"content":[{"inlineContent":[{"type":"text","text":"The latitude to be checked against the bounds."}],"type":"paragraph"}],"name":"latitude"}],"kind":"parameters"}},{"path":"\/primaryContentSections\/2","value":{"kind":"content","content":[{"type":"heading","anchor":"return-value","level":2,"text":"Return Value"},{"type":"paragraph","inlineContent":[{"code":"true","type":"codeVoice"},{"text":" if the bounds contains ","type":"text"},{"type":"codeVoice","code":"latitude"},{"text":", ","type":"text"},{"type":"codeVoice","code":"false"},{"type":"text","text":" otherwise."}]}]},"op":"replace"},{"op":"replace","value":"MBMCoordinateBounds","path":"\/references\/doc:~1~1com.mapbox.MapboxMaps~1documentation~1MapboxMaps~1CoordinateBounds\/title"},{"op":"replace","value":[{"text":"MBMCoordinateBounds","kind":"identifier"}],"path":"\/references\/doc:~1~1com.mapbox.MapboxMaps~1documentation~1MapboxMaps~1CoordinateBounds\/fragments"},{"path":"\/references\/doc:~1~1com.mapbox.MapboxMaps~1documentation~1MapboxMaps~1CoordinateBounds\/navigatorTitle","op":"replace","value":[{"kind":"identifier","text":"MBMCoordinateBounds"}]},{"path":"\/references\/doc:~1~1com.mapbox.MapboxMaps~1documentation~1MapboxMaps~1CoordinateBounds~1containsLatitude(forLatitude:)\/title","op":"replace","value":"containsLatitudeForLatitude:"},{"path":"\/references\/doc:~1~1com.mapbox.MapboxMaps~1documentation~1MapboxMaps~1CoordinateBounds~1containsLatitude(forLatitude:)\/fragments","value":[{"kind":"text","text":"- "},{"kind":"identifier","text":"containsLatitudeForLatitude:"}],"op":"replace"}]}]}